#!/usr/bin/env bash

# Copyright The Hedgehog Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# The install script is based off of the Helm v3 install script:
# https://github.com/helm/helm/blob/main/scripts/get-helm-3

: ${BINARY_NAME:="testfab"}
: ${USE_SUDO:="true"}
: ${DEBUG:="false"}
: ${INSTALL_DIR:="/usr/local/bin"}
: ${TAG:="latest"}

HAS_ORAS="$(type "oras" &> /dev/null && echo true || echo false)"

# initArch discovers the architecture for this system.
initArch() {
  ARCH=$(uname -m)
  case $ARCH in
    armv5*) ARCH="armv5";;
    armv6*) ARCH="armv6";;
    armv7*) ARCH="arm";;
    aarch64) ARCH="arm64";;
    x86) ARCH="386";;
    x86_64) ARCH="amd64";;
    i686) ARCH="386";;
    i386) ARCH="386";;
  esac
}

# initOS discovers the operating system for this system.
initOS() {
  OS=$(echo `uname`|tr '[:upper:]' '[:lower:]')

  case "$OS" in
    # Minimalist GNU for Windows
    mingw*|cygwin*) OS='windows';;
  esac
}

# runs the given command as root (detects if we are root already)
runAsRoot() {
  HOME=${HOME:-/tmp}
  if [ $EUID -ne 0 -a "$USE_SUDO" = "true" ]; then
    sudo HOME=$HOME "${@}"
  else
    HOME=$HOME "${@}"
  fi
}

# verifySupported checks that the os/arch combination is supported for
# binary builds, as well whether or not necessary tools are present.
verifySupported() {
  local supported="linux-amd64"
  if ! echo "${supported}" | grep -q "${OS}-${ARCH}"; then
    echo "No prebuilt binary for ${OS}-${ARCH}."
    echo "To build from source, go to https://github.com/githedgehog/testfab"
    exit 1
  fi

  if [ "${HAS_ORAS}" != "true" ] ; then
    echo "Oras required, you can install it by running: curl -fsSL https://i.hhdev.io/oras | bash"
    exit 1
  fi
}

installFile() {
  runAsRoot oras pull -o /usr/local/bin/ ghcr.io/githedgehog/testfab:"${TAG}"
  runAsRoot chmod +x /usr/local/bin/testfab

  echo "$BINARY_NAME installed into $INSTALL_DIR/$BINARY_NAME"
}

# Execution

#Stop execution on any error
set -e
set -o pipefail

# Set debug if desired
if [ "${DEBUG}" == "true" ]; then
  set -x
fi

initArch
initOS
verifySupported
installFile
